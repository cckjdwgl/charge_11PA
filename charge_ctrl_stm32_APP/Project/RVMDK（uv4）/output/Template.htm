<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\Template.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\Template.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 24]: Last Updated: Mon Jan 29 09:39:47 2018
<BR><P>
<H3>Maximum Stack Usage =        268 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; uart1_cmd &rArr; cmd_RGB888_565 &rArr; RGB888_565 &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[39]">ADC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[39]">ADC3_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from dwgl_adc.o(i.ADC1_2_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from dwgl_dma.o(i.DMA1_Channel1_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from dwgl_dma.o(i.DMA1_Channel2_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from dwgl_exti.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from dwgl_exti.o(i.EXTI1_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from stm32f10x_it.o(i.EXTI4_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from dwgl_spi.o(i.SPI1_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from dwgl_spi.o(i.SPI2_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from dwgl_tim.o(i.TIM2_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from dwgl_tim.o(i.TIM3_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">TIM6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from dwgl_sci.o(i.USART1_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from dwgl_sci.o(i.USART2_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from dwgl_sci.o(i.USART3_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[48]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[46]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[48]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[e8]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[49]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e9]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ea]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[eb]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[ec]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[ed]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ee]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>__decompress1</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 222 bytes, Stack size 8 bytes, dwgl_adc.o(i.ADC1_2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ADC1_2_IRQHandler &rArr; ADC_RegularChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetITStatus
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>ADC1_Init</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, dwgl_adc.o(i.ADC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ADC1_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartCalibration
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ResetCalibration
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetResetCalibrationStatus
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationStatus
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ADCCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[4d]"></a>ADC_ClearITPendingBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>

<P><STRONG><a name="[56]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
</UL>

<P><STRONG><a name="[5c]"></a>ADC_Configuration</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dwgl_adc.o(i.ADC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ADC_Configuration &rArr; ADC1_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>ADC_DeInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32f10x_adc.o(i.ADC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
</UL>

<P><STRONG><a name="[5a]"></a>ADC_GetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
</UL>

<P><STRONG><a name="[4e]"></a>ADC_GetConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetConversionValue))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>

<P><STRONG><a name="[4c]"></a>ADC_GetITStatus</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f10x_adc.o(i.ADC_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>ADC_GetResetCalibrationStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_GetResetCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
</UL>

<P><STRONG><a name="[de]"></a>ADC_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_adc.o(i.ADC_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>ADC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f10x_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
</UL>

<P><STRONG><a name="[4f]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f10x_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>

<P><STRONG><a name="[57]"></a>ADC_ResetCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_ResetCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
</UL>

<P><STRONG><a name="[5b]"></a>ADC_SoftwareStartConvCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_SoftwareStartConvCmd))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[59]"></a>ADC_StartCalibration</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_adc.o(i.ADC_StartCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>CHIP_PRO</STRONG> (Thumb, 454 bytes, Stack size 32 bytes, dwgl_chipflash.o(i.CHIP_PRO))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CHIP_PRO &rArr; FLASH2_GPIOSPI_Read &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_CHIP_PRO
</UL>

<P><STRONG><a name="[65]"></a>ChargeCtrl_B</STRONG> (Thumb, 226 bytes, Stack size 16 bytes, dwgl_function.o(i.ChargeCtrl_B))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ChargeCtrl_B
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeStateB
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>ChargeCtrl_C</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, dwgl_function.o(i.ChargeCtrl_C))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ChargeCtrl_C
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeStateC
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>Check_CHIP_PRO</STRONG> (Thumb, 568 bytes, Stack size 16 bytes, dwgl_chipflash.o(i.Check_CHIP_PRO))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Check_CHIP_PRO &rArr; CHIP_PRO &rArr; FLASH2_GPIOSPI_Read &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHIP_PRO
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Recall
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_CHIP_PRO
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, dwgl_dma.o(i.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dwgl_dma.o(i.DMA1_Channel2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>DMA1_Channel2_Init</STRONG> (Thumb, 82 bytes, Stack size 56 bytes, dwgl_dma.o(i.DMA1_Channel2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DMA1_Channel2_Init &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
</UL>

<P><STRONG><a name="[6c]"></a>DMA_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[71]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_Init
</UL>

<P><STRONG><a name="[72]"></a>DMA_Configuration</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dwgl_dma.o(i.DMA_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DMA_Configuration &rArr; DMA1_Channel2_Init &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f10x_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_Init
</UL>

<P><STRONG><a name="[70]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_Init
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>Delay_10ms</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, dwgl_wb_lcd.o(i.Delay_10ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay_10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[99]"></a>Delay_us</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bsp_systick.o(i.Delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Save_ADC
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Power_on
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Hub_Rst
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitAll
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>Device_Rst</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dwgl_function.o(i.Device_Rst))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[75]"></a>DisplayPROT_EWM</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, dwgl_tft.o(i.DisplayPROT_EWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DisplayPROT_EWM &rArr; display_flash_BMP &rArr; FLASH2_GPIOSPI_Read &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_flash_BMP
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TEST
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>Dport_ChargeOFF</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, dwgl_function.o(i.Dport_ChargeOFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Dport_ChargeOFF
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Power_on
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeStateC
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeStateB
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>Dport_ChargeON</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, dwgl_function.o(i.Dport_ChargeON))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Dport_ChargeON
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeStateC
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeStateB
</UL>

<P><STRONG><a name="[79]"></a>Dport_ChargeStateB</STRONG> (Thumb, 1262 bytes, Stack size 16 bytes, dwgl_function.o(i.Dport_ChargeStateB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Dport_ChargeStateB &rArr; ChargeCtrl_B
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeON
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeOFF
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeCtrl_B
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>Dport_ChargeStateC</STRONG> (Thumb, 1264 bytes, Stack size 16 bytes, dwgl_function.o(i.Dport_ChargeStateC))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Dport_ChargeStateC &rArr; ChargeCtrl_C
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeON
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeOFF
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeCtrl_C
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, dwgl_exti.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI15_10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, dwgl_exti.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_it.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
</UL>

<P><STRONG><a name="[7b]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
</UL>

<P><STRONG><a name="[7d]"></a>FLASH2_CSSelect</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pm25lq512flash.o(i.FLASH2_CSSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SE
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_IsBusy
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>

<P><STRONG><a name="[7e]"></a>FLASH2_GPIOSPI_IsBusy</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, dwgl_spi.o(i.FLASH2_GPIOSPI_IsBusy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH2_GPIOSPI_IsBusy &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_cycle
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_CSSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SE
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
</UL>

<P><STRONG><a name="[5f]"></a>FLASH2_GPIOSPI_Read</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, dwgl_spi.o(i.FLASH2_GPIOSPI_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH2_GPIOSPI_Read &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_DMARecive
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_cycle
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_CSSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_flash_BMP
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB888_565
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHIP_PRO
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_flash_BMPE
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Set_Version
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Save_ADC
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Read_Flash
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_RGB888_565
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Power_on
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_MediaCtrl
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Hub_Rst
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Get_Version
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Tx
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Requst
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Recall
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Erase
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Device_num
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Device_Check
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_CHIP_PRO
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd3_Set_State
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FiletoBuffer_ID
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPROT_EWM
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_CHIP_PRO
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>FLASH2_GPIOSPI_SE</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, dwgl_spi.o(i.FLASH2_GPIOSPI_SE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH2_GPIOSPI_SE &rArr; FLASH2_GPIOSPI_IsBusy &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_IsBusy
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_cycle
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_CSSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Erase
</UL>

<P><STRONG><a name="[6a]"></a>FLASH2_GPIOSPI_SER</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, dwgl_spi.o(i.FLASH2_GPIOSPI_SER))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH2_GPIOSPI_SER &rArr; FLASH2_GPIOSPI_IsBusy &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_IsBusy
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_cycle
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_CSSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Write_Flash
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Set_Version
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Save_ADC
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_MediaCtrl
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Hub_Rst
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Tx
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Requst
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Recall
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Erase
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Device_num
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_CHIP_PRO
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_CHIP_PRO
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>FLASH2_GPIOSPI_Write</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, dwgl_spi.o(i.FLASH2_GPIOSPI_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FLASH2_GPIOSPI_Write &rArr; FLASH2_GPIOSPI_IsBusy &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_IsBusy
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_cycle
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_CSSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Write_Flash
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Set_Version
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Save_ADC
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_MediaCtrl
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Hub_Rst
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Tx
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Requst
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Recall
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Erase
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Device_num
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_CHIP_PRO
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_CHIP_PRO
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHIP_PRO
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_CHIP_PRO
</UL>

<P><STRONG><a name="[62]"></a>FLASH_ErasePage</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f10x_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHIP_PRO
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_CHIP_PRO
</UL>

<P><STRONG><a name="[84]"></a>FLASH_GetBank1Status</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_GetBank1Status))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[64]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHIP_PRO
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_CHIP_PRO
</UL>

<P><STRONG><a name="[63]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f10x_flash.o(i.FLASH_ProgramHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_ProgramHalfWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHIP_PRO
</UL>

<P><STRONG><a name="[60]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHIP_PRO
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_CHIP_PRO
</UL>

<P><STRONG><a name="[83]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[85]"></a>FSMC_LCDInit</STRONG> (Thumb, 134 bytes, Stack size 120 bytes, dwgl_wb_lcd.o(i.FSMC_LCDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = FSMC_LCDInit
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(i.FSMC_NORSRAMCmd))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCDInit
</UL>

<P><STRONG><a name="[86]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(i.FSMC_NORSRAMInit))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCDInit
</UL>

<P><STRONG><a name="[88]"></a>FiletoBuffer_ID</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, dwgl_function.o(i.FiletoBuffer_ID))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FiletoBuffer_ID &rArr; FLASH2_GPIOSPI_Read &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c5]"></a>Frame_check_cmd1</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, dwgl_function.o(i.Frame_check_cmd1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Frame_check_cmd1
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Tx
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Requst
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Erase
</UL>

<P><STRONG><a name="[52]"></a>GPIO_Init</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IOConfig
</UL>

<P><STRONG><a name="[df]"></a>GPIO_NegationBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_led.o(i.GPIO_NegationBits))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
</UL>

<P><STRONG><a name="[e1]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init2
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init1
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeON
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_cs_enable
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_CSSelect
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Power_on
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Hub_Rst
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_Message
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TEST
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitAll
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeCtrl_C
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeCtrl_B
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init2
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init1
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_cs_disable
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_CSSelect
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Save_ADC
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Power_on
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Hub_Rst
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd3_Set_State
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TEST
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitAll
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeOFF
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeCtrl_C
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeCtrl_B
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>Get_ADC_BaseLine</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, dwgl_function.o(i.Get_ADC_BaseLine))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Save_ADC
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Hub_Rst
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[89]"></a>IWDG_Init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wdg.o(i.IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[8b]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[8c]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_SetReload))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[8a]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[8f]"></a>LCD_Clear</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, dwgl_wb_lcd.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_Clear &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowMax
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>LCD_Fill</STRONG> (Thumb, 80 bytes, Stack size 28 bytes, dwgl_wb_lcd.o(i.LCD_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_Fill &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowMax
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_Clear
</UL>

<P><STRONG><a name="[93]"></a>LCD_IOConfig</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, dwgl_wb_lcd.o(i.LCD_IOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_IOConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>LCD_Init</STRONG> (Thumb, 820 bytes, Stack size 4 bytes, dwgl_wb_lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_Init &rArr; Delay_10ms
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init2
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init1
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitAll
</UL>

<P><STRONG><a name="[96]"></a>LCD_Init1</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dwgl_wb_lcd.o(i.LCD_Init1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_Init1 &rArr; LCD_Init &rArr; Delay_10ms
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TEST
</UL>

<P><STRONG><a name="[97]"></a>LCD_Init2</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dwgl_wb_lcd.o(i.LCD_Init2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_Init2 &rArr; LCD_Init &rArr; Delay_10ms
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TEST
</UL>

<P><STRONG><a name="[98]"></a>LCD_InitAll</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, dwgl_wb_lcd.o(i.LCD_InitAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_InitAll &rArr; LCD_Init &rArr; Delay_10ms
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TEST
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>LCD_TEST</STRONG> (Thumb, 1032 bytes, Stack size 40 bytes, dwgl_function.o(i.LCD_TEST))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = LCD_TEST &rArr; display_flash_BMPE &rArr; display_flash_BMP &rArr; FLASH2_GPIOSPI_Read &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init2
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init1
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_DisplayStr
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_flash_BMPE
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitAll
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPROT_EWM
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>LCD_WindowMax</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, dwgl_wb_lcd.o(i.LCD_WindowMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_WindowMax
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_flash_BMP
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_ShowHzE
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_ShowCharE
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_1bitdeep_TXT
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[91]"></a>LCD_WriteRAM_Prepare</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dwgl_wb_lcd.o(i.LCD_WriteRAM_Prepare))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_flash_BMP
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_ShowHzE
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_ShowCharE
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_1bitdeep_TXT
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[9d]"></a>LED_GPIO_Config</STRONG> (Thumb, 278 bytes, Stack size 8 bytes, bsp_led.o(i.LED_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LED_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>NVIC_Configuration</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, dwgl_global.o(i.NVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>NVIC_Init</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_ADCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
</UL>

<P><STRONG><a name="[6e]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCDInit
</UL>

<P><STRONG><a name="[b7]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
</UL>

<P><STRONG><a name="[aa]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[51]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Recall
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IOConfig
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[bb]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[a1]"></a>RGB888_565</STRONG> (Thumb, 494 bytes, Stack size 40 bytes, dwgl_function.o(i.RGB888_565))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = RGB888_565 &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_RGB888_565
</UL>

<P><STRONG><a name="[81]"></a>SPI1_DMARecive</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dwgl_dma.o(i.SPI1_DMARecive))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>

<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, dwgl_spi.o(i.SPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SPI1_IRQHandler &rArr; SPI_I2S_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetITStatus
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>SPI1_Init</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, dwgl_spi.o(i.SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI1_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Configuration
</UL>

<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dwgl_spi.o(i.SPI2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a8]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>

<P><STRONG><a name="[a9]"></a>SPI_Configuration</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dwgl_spi.o(i.SPI_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_Configuration &rArr; SPI1_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>SPI_I2S_ClearITPendingBit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_I2S_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>

<P><STRONG><a name="[a6]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_I2S_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>

<P><STRONG><a name="[80]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SE
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_IsBusy
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>

<P><STRONG><a name="[a3]"></a>SPI_I2S_GetITStatus</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32f10x_spi.o(i.SPI_I2S_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SPI_I2S_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_IRQHandler
</UL>

<P><STRONG><a name="[a7]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>State_Message</STRONG> (Thumb, 1384 bytes, Stack size 48 bytes, dwgl_function.o(i.State_Message))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_Clear
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConvCmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimingDelay_Decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[dd]"></a>SysTick_Init</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, bsp_systick.o(i.SysTick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysTick_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>SystemInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dwgl_tim.o(i.TIM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, dwgl_tim.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM3_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b1]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[af]"></a>TimingDelay_Decrement</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bsp_systick.o(i.TimingDelay_Decrement))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b2]"></a>UART1_Init</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, dwgl_sci.o(i.UART1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = UART1_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
</UL>

<P><STRONG><a name="[a2]"></a>UART1_Send_Data</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, dwgl_sci.o(i.UART1_Send_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_Message
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB888_565
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Write_Flash
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_ShakeHands
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Set_Version
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Save_ADC
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Read_Flash
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_RGB888_565
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Power_on
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Power_off
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Port_Info
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_PRO_Version
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_MediaCtrl
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Get_charge_speed
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Get_Version
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Get_AD_count
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Get_ADC
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Tx
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Requst
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Recall
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Erase
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Device_num
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Device_Check
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_CHIP_PRO
</UL>

<P><STRONG><a name="[b6]"></a>UART3_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, dwgl_sci.o(i.UART3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = UART3_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
</UL>

<P><STRONG><a name="[be]"></a>UART3_Send_Data</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dwgl_sci.o(i.UART3_Send_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART3_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd3_ShakeHands
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd3_Set_State
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd3_Get_State
</UL>

<P><STRONG><a name="[b9]"></a>UART_Configuration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, dwgl_sci.o(i.UART_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = UART_Configuration &rArr; UART3_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, dwgl_sci.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, dwgl_sci.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, dwgl_sci.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART3_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b5]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
</UL>

<P><STRONG><a name="[b4]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
</UL>

<P><STRONG><a name="[ba]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[b8]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[bc]"></a>Version_display</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, dwgl_function.o(i.Version_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Version_display &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f1]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[f2]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[f3]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[bd]"></a>cmd3_Get_State</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, dwgl_function.o(i.cmd3_Get_State))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cmd3_Get_State &rArr; UART3_Send_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_cmd
</UL>

<P><STRONG><a name="[bf]"></a>cmd3_Set_State</STRONG> (Thumb, 422 bytes, Stack size 8 bytes, dwgl_function.o(i.cmd3_Set_State))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = cmd3_Set_State &rArr; FLASH2_GPIOSPI_Read &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Send_Data
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_cmd
</UL>

<P><STRONG><a name="[c0]"></a>cmd3_ShakeHands</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, dwgl_function.o(i.cmd3_ShakeHands))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cmd3_ShakeHands &rArr; UART3_Send_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_cmd
</UL>

<P><STRONG><a name="[c1]"></a>cmd_CHIP_PRO</STRONG> (Thumb, 820 bytes, Stack size 24 bytes, dwgl_function.o(i.cmd_CHIP_PRO))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = cmd_CHIP_PRO &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_CHIP_PRO
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[c2]"></a>cmd_Device_Check</STRONG> (Thumb, 336 bytes, Stack size 8 bytes, dwgl_function.o(i.cmd_Device_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = cmd_Device_Check &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[c3]"></a>cmd_Device_num</STRONG> (Thumb, 848 bytes, Stack size 24 bytes, dwgl_function.o(i.cmd_Device_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = cmd_Device_num &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_DisplayStr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[e7]"></a>cmd_Erase_Flash</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dwgl_function.o(i.cmd_Erase_Flash))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[c4]"></a>cmd_File_Erase</STRONG> (Thumb, 692 bytes, Stack size 16 bytes, dwgl_function.o(i.cmd_File_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = cmd_File_Erase &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SE
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frame_check_cmd1
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[c6]"></a>cmd_File_Recall</STRONG> (Thumb, 2128 bytes, Stack size 32 bytes, dwgl_function.o(i.cmd_File_Recall))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = cmd_File_Recall &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_flash_BMP
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_CHIP_PRO
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[c7]"></a>cmd_File_Requst</STRONG> (Thumb, 5110 bytes, Stack size 32 bytes, dwgl_function.o(i.cmd_File_Requst))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = cmd_File_Requst &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frame_check_cmd1
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[c8]"></a>cmd_File_Tx</STRONG> (Thumb, 668 bytes, Stack size 16 bytes, dwgl_function.o(i.cmd_File_Tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = cmd_File_Tx &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frame_check_cmd1
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[c9]"></a>cmd_Get_ADC</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, dwgl_function.o(i.cmd_Get_ADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = cmd_Get_ADC &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[ca]"></a>cmd_Get_AD_count</STRONG> (Thumb, 290 bytes, Stack size 8 bytes, dwgl_function.o(i.cmd_Get_AD_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = cmd_Get_AD_count &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[cb]"></a>cmd_Get_Version</STRONG> (Thumb, 1648 bytes, Stack size 8 bytes, dwgl_function.o(i.cmd_Get_Version))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = cmd_Get_Version &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[cc]"></a>cmd_Get_charge_speed</STRONG> (Thumb, 408 bytes, Stack size 8 bytes, dwgl_function.o(i.cmd_Get_charge_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = cmd_Get_charge_speed &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[cd]"></a>cmd_Hub_Rst</STRONG> (Thumb, 672 bytes, Stack size 8 bytes, dwgl_function.o(i.cmd_Hub_Rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = cmd_Hub_Rst &rArr; FLASH2_GPIOSPI_Write &rArr; FLASH2_GPIOSPI_IsBusy &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADC_BaseLine
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[cf]"></a>cmd_MediaCtrl</STRONG> (Thumb, 570 bytes, Stack size 16 bytes, dwgl_function.o(i.cmd_MediaCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = cmd_MediaCtrl &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[d0]"></a>cmd_PRO_Version</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, dwgl_function.o(i.cmd_PRO_Version))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = cmd_PRO_Version &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[d1]"></a>cmd_Port_Info</STRONG> (Thumb, 354 bytes, Stack size 16 bytes, dwgl_function.o(i.cmd_Port_Info))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = cmd_Port_Info &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[d2]"></a>cmd_Power_off</STRONG> (Thumb, 324 bytes, Stack size 16 bytes, dwgl_function.o(i.cmd_Power_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = cmd_Power_off &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[d3]"></a>cmd_Power_on</STRONG> (Thumb, 942 bytes, Stack size 16 bytes, dwgl_function.o(i.cmd_Power_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = cmd_Power_on &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeOFF
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[d4]"></a>cmd_RGB888_565</STRONG> (Thumb, 1184 bytes, Stack size 24 bytes, dwgl_function.o(i.cmd_RGB888_565))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = cmd_RGB888_565 &rArr; RGB888_565 &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB888_565
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[d5]"></a>cmd_RGB_clear</STRONG> (Thumb, 238 bytes, Stack size 32 bytes, dwgl_function.o(i.cmd_RGB_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = cmd_RGB_clear &rArr; tft_Clear &rArr; LCD_Fill &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[d6]"></a>cmd_Read_Flash</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, dwgl_function.o(i.cmd_Read_Flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = cmd_Read_Flash &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[d7]"></a>cmd_Save_ADC</STRONG> (Thumb, 390 bytes, Stack size 16 bytes, dwgl_function.o(i.cmd_Save_ADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = cmd_Save_ADC &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADC_BaseLine
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[d8]"></a>cmd_Set_Version</STRONG> (Thumb, 562 bytes, Stack size 16 bytes, dwgl_function.o(i.cmd_Set_Version))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = cmd_Set_Version &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[d9]"></a>cmd_ShakeHands</STRONG> (Thumb, 468 bytes, Stack size 24 bytes, dwgl_function.o(i.cmd_ShakeHands))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = cmd_ShakeHands &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_DisplayStr
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[da]"></a>cmd_Write_Flash</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, dwgl_function.o(i.cmd_Write_Flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = cmd_Write_Flash &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send_Data
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
</UL>

<P><STRONG><a name="[7f]"></a>delay_cycle</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pm25lq512flash.o(i.delay_cycle))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SE
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_IsBusy
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>

<P><STRONG><a name="[76]"></a>display_flash_BMP</STRONG> (Thumb, 704 bytes, Stack size 72 bytes, dwgl_tft.o(i.display_flash_BMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = display_flash_BMP &rArr; FLASH2_GPIOSPI_Read &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_cs_enable
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_cs_disable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowMax
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_flash_BMPE
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Recall
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPROT_EWM
</UL>

<P><STRONG><a name="[9b]"></a>display_flash_BMPE</STRONG> (Thumb, 818 bytes, Stack size 40 bytes, dwgl_tft.o(i.display_flash_BMPE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = display_flash_BMPE &rArr; display_flash_BMP &rArr; FLASH2_GPIOSPI_Read &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_flash_BMP
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TEST
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>main</STRONG> (Thumb, 3766 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = main &rArr; uart1_cmd &rArr; cmd_RGB888_565 &rArr; RGB888_565 &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ITConfig
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_DisplayStr
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_1bitdeep_TXT
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_flash_BMPE
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Version_display
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_Message
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Configuration
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TEST
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitAll
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_IOConfig
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_ADC_BaseLine
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_NegationBits
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FiletoBuffer_ID
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_LCDInit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Write
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_SER
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH2_GPIOSPI_Read
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeStateC
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeStateB
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dport_ChargeOFF
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPROT_EWM
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Configuration
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_CHIP_PRO
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeCtrl_C
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeCtrl_B
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3_cmd
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_cmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[e4]"></a>tft_1bitdeep_TXT</STRONG> (Thumb, 560 bytes, Stack size 64 bytes, dwgl_tft.o(i.tft_1bitdeep_TXT))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = tft_1bitdeep_TXT &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_cs_enable
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_cs_disable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowMax
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>tft_Clear</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, dwgl_tft.o(i.tft_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tft_Clear &rArr; LCD_Fill &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_cs_enable
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_cs_disable
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_RGB_clear
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_Message
</UL>

<P><STRONG><a name="[9c]"></a>tft_DisplayStr</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, dwgl_tft.o(i.tft_DisplayStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_cs_enable
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_cs_disable
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_ShowHzE
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_ShowCharE
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_ShakeHands
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Device_num
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Version_display
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_Message
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TEST
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e6]"></a>tft_ShowCharE</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, dwgl_tft.o(i.tft_ShowCharE))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = tft_ShowCharE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowMax
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_DisplayStr
</UL>

<P><STRONG><a name="[e5]"></a>tft_ShowHzE</STRONG> (Thumb, 196 bytes, Stack size 56 bytes, dwgl_tft.o(i.tft_ShowHzE))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteRAM_Prepare
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WindowMax
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_DisplayStr
</UL>

<P><STRONG><a name="[dc]"></a>tft_cs_disable</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, dwgl_tft.o(i.tft_cs_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tft_cs_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_Clear
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_flash_BMP
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_DisplayStr
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_1bitdeep_TXT
</UL>

<P><STRONG><a name="[db]"></a>tft_cs_enable</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, dwgl_tft.o(i.tft_cs_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tft_cs_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_Clear
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_flash_BMP
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_DisplayStr
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft_1bitdeep_TXT
</UL>

<P><STRONG><a name="[e2]"></a>uart1_cmd</STRONG> (Thumb, 732 bytes, Stack size 16 bytes, main.o(i.uart1_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = uart1_cmd &rArr; cmd_RGB888_565 &rArr; RGB888_565 &rArr; UART1_Send_Data &rArr; State_Message &rArr; tft_DisplayStr &rArr; tft_ShowHzE &rArr; LCD_WindowMax
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Write_Flash
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_ShakeHands
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Set_Version
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Save_ADC
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Read_Flash
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_RGB_clear
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_RGB888_565
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Power_on
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Power_off
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Port_Info
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_PRO_Version
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_MediaCtrl
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Hub_Rst
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Get_charge_speed
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Get_Version
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Get_AD_count
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Get_ADC
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Tx
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Requst
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Recall
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Erase
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Erase_Flash
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Device_num
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Device_Check
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_CHIP_PRO
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;State_Message
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device_Rst
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e3]"></a>uart3_cmd</STRONG> (Thumb, 322 bytes, Stack size 8 bytes, main.o(i.uart3_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uart3_cmd &rArr; cmd3_Set_State &rArr; FLASH2_GPIOSPI_Read &rArr; FLASH2_CSSelect
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd3_ShakeHands
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd3_Set_State
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd3_Get_State
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ab]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[ac]"></a>SetSysClockTo72</STRONG> (Thumb, 212 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[e0]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, main.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dwgl_function.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_Hub_Rst
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_File_Recall
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_CHIP_PRO
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Device_Rst
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
